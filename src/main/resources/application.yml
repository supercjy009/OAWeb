#解决传入参数乱码问题
spring.http.encoding.force: true
spring.http.encoding.charset: UTF-8
spring.http.encoding.enabled: true
server.tomcat.uri-encoding: UTF-8
#解决没有跳转到html网页的问题
#前缀设置，SpringBoot默认模板放置在classpath:/template/目录下
#spring.mvc.view.prefix: /public/view/
# 后缀设置，默认为.html
#spring.mvc.view.suffix: .html

#spring 的session存储问题解决
spring.session.store-type: redis

# ================================================
#                   数据库配置
# ================================================
spring.datasource.url: jdbc:mysql://localhost/oaweb?useUnicode=true&characterEncoding=utf-8
spring.datasource.username: root
#spring.datasource.password: 8050Fb60
spring.datasource.password: 123456
spring.datasource.driver-class-name: com.mysql.jdbc.Driver
spring.datasource.max-active: 20 #连接池中最大活跃连接数
spring.datasource.max-idle: 8 #指定连接池最大的空闲连接数量
spring.datasource.min-idle: 8 #指定必须保持连接的最小值
spring.datasource.initial-size: 10  #指定启动连接池时，初始建立的连接数量
spring:
  jackson:
    date-format: yyyy-MM-dd
    time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: false

mybatis:
  mapperLocations: classpath:mapping/*.xml
  typeAliasesPackage: com.testshiro.model
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#pagehelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql
# 打印sql
logging:
  level:
    com.onepro.custom.mapper: DEBUG
    org.spring.springboot.dao: DEBUG
#thymeleaf模板属性设置
#thymeleaf start
spring.thymeleaf.mode: HTML5
spring.thymeleaf.encoding: UTF-8
spring.thymeleaf.content-type: text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache: false
#thymeleaf end

file:
  #静态资源对外暴露的访问路径
  staticAccessPath: /api/file/**
  #文件上传目录（注意Linux和Windows上的目录结构不同）
  uploadFolder: /root/uploadFiles/
#  uploadFolder: d://tmp/

#redis设置
#redis
#spring.redis.host: 127.0.0.1
#spring.redis.port: 6379
#spring.redis.pool.max-idle: 8  #最大空闲链接
#spring.redis.pool.min-idle: 0   #最小空闲连接
#spring.redis.pool.max-active: 8 #最大连接数
#spring.redis.pool.max-wait: -1  # 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.timeout: 0 # 连接超时时间（毫秒）
#spring.redis.database: 1 默认数据库为0
spring.redis:
  maxTotal: 8 #最大连接数, 默认8个
  host: 127.0.0.1
  port: 6379
  minIdle: 0
  maxIdle: 8 #最大空闲连接数
  maxWaitMillis: -1 #获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1
  testOnBorrow: false #在获取连接的时候检查有效性, 默认false
  testOnReturn: true   #返回连接时，检测连接是否成功
  password:
  timeout: 0
logging:
  config: classpath:logback.xml

